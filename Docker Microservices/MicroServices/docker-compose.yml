version: '3'
services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - service_network

  mysql:
    image: mysql
    container_name: mysql1
    environment:
      MYSQL_ROOT_PASSWORD: Happy
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - service_network

  broker:
    image: wurstmeister/kafka:latest
    container_name: broker
    ports:
      - "9092:9092"
    environment:
        KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - service_network
    depends_on:
      - zookeeper

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - service_network

  discovery-server:
    image: discovery-server
    container_name: discovery-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - service_network

  api-gateway:
    image: api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=TRACE
    depends_on:
      - discovery-server
    networks:
      - service_network

  product-service:
    image: product-service
    container_name: product-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - discovery-server
      - api-gateway
    networks:
      - service_network

  order-service:
    image: order-service
    container_name: order-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - discovery-server
      - api-gateway
    networks:
      - service_network

  inventory-service:
    image: inventory-service
    container_name: inventory-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - discovery-server
      - api-gateway
    networks:
      - service_network

  notification-service:
    image: notification-service
    container_name: notification-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - discovery-server
      - api-gateway
    networks:
      - service_network

volumes:
  mongodb_data:
    driver: local
  mysql_data:
    driver: local

networks:
  service_network:
    external: true
